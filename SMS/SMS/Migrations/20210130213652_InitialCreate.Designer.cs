// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SMS;
using SMS.Models;

namespace SMS.Migrations
{
    [DbContext(typeof(SchoolManagementContext))]
    [Migration("20210130213652_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SMS.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SMS.Models.Designation", b =>
                {
                    b.Property<int>("DesignationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DesignationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DesignationId");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("SMS.Models.Function", b =>
                {
                    b.Property<int>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentFunctionId")
                        .HasColumnType("int");

                    b.HasKey("FunctionId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("SMS.Models.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NationalityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("SMS.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Mobile")
                        .HasColumnType("bigint");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("ReligionId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("SMS.Models.Religion", b =>
                {
                    b.Property<int>("ReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ReligionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReligionId");

                    b.ToTable("Religions");
                });

            modelBuilder.Entity("SMS.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SMS.Models.RoleFunction", b =>
                {
                    b.Property<int>("RoleFunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleFunctionId");

                    b.HasIndex("FunctionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleFunctions");
                });

            modelBuilder.Entity("SMS.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankIfscCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DesignationId")
                        .HasColumnType("int");

                    b.Property<string>("EPFNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESINumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotherMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("ReportingTo")
                        .HasColumnType("int");

                    b.Property<string>("SpouseMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UANNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FathersAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("FathersDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LegalGaurdianAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("LegalGaurdianDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalGaurdianSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocalGaurdianAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("LocalGaurdianDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalGaurdianSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersAadharNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MothersAnnualIncome")
                        .HasColumnType("bigint");

                    b.Property<string>("MothersDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MothersSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("RollNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("PersonId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SMS.Models.Person", b =>
                {
                    b.HasOne("SMS.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("SMS.Models.Religion", "Religion")
                        .WithMany()
                        .HasForeignKey("ReligionId");

                    b.Navigation("Nationality");

                    b.Navigation("Religion");
                });

            modelBuilder.Entity("SMS.Models.RoleFunction", b =>
                {
                    b.HasOne("SMS.Models.Function", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SMS.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SMS.Models.Staff", b =>
                {
                    b.HasOne("SMS.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("SMS.Models.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("SMS.Models.Person", "Person")
                        .WithMany("Staff")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SMS.Models.Student", b =>
                {
                    b.HasOne("SMS.Models.Person", "Person")
                        .WithMany("Students")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SMS.Models.Person", b =>
                {
                    b.Navigation("Staff");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
